# Generated by Django 4.2.16 on 2024-10-31 03:00

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentication', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ScheduledReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(help_text='Type of the scheduled report.', max_length=100)),
                ('schedule_time', models.DateTimeField(help_text='The time when the report is scheduled to be generated.')),
                ('interval', models.CharField(help_text='Interval for report generation (e.g., daily, weekly, monthly).', max_length=50)),
                ('email_recipients', models.TextField(help_text='Comma-separated email addresses of recipients for the report.')),
                ('organization', models.ForeignKey(help_text='The organization for which the report is scheduled.', on_delete=django.db.models.deletion.CASCADE, to='authentication.organization')),
            ],
        ),
        migrations.CreateModel(
            name='DataBreachReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('incident_date', models.DateTimeField(help_text='Date and time when the incident occurred.')),
                ('discovery_date', models.DateTimeField(help_text='Date and time when the incident was discovered.')),
                ('description', models.TextField(help_text='Description of the data breach incident.')),
                ('affected_data_subjects', models.IntegerField(help_text='Number of data subjects affected by the breach.')),
                ('data_types_affected', models.TextField(help_text='Types of data that were affected in the breach.')),
                ('severity', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], help_text='Severity level of the data breach.', max_length=10)),
                ('potential_impact', models.TextField(help_text='Potential impact of the data breach.')),
                ('remediation_steps', models.TextField(help_text='Steps taken to remediate the breach.')),
                ('reported_to_authorities', models.BooleanField(default=False, help_text='Indicates if the breach was reported to authorities.')),
                ('date_reported_to_authorities', models.DateTimeField(blank=True, help_text='Date when the breach was reported to authorities.', null=True)),
                ('reported_to_data_subjects', models.BooleanField(default=False, help_text='Indicates if the breach was reported to affected data subjects.')),
                ('date_reported_to_data_subjects', models.DateTimeField(blank=True, help_text='Date when the breach was reported to data subjects.', null=True)),
                ('report_generated_date', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the breach report was generated.')),
                ('is_within_72_hours', models.BooleanField(help_text='Indicates if the breach was reported within 72 hours of discovery.')),
                ('organization', models.ForeignKey(help_text='The organization affected by the data breach.', on_delete=django.db.models.deletion.CASCADE, to='authentication.organization')),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceAudit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audit_date', models.DateTimeField(auto_now_add=True, help_text='Date when the audit was conducted.')),
                ('audit_findings', models.TextField(help_text='Findings from the audit.')),
                ('recommendations', models.TextField(help_text='Recommendations based on the audit findings.')),
                ('is_resolved', models.BooleanField(default=False, help_text='Indicates if the findings have been resolved.')),
                ('resolution_date', models.DateTimeField(blank=True, help_text='Date when the findings were resolved.', null=True)),
                ('auditor', models.ForeignKey(help_text='The user who conducted the audit.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentication.user')),
                ('organization', models.ForeignKey(help_text='The organization that is being audited.', on_delete=django.db.models.deletion.CASCADE, to='authentication.organization')),
            ],
        ),
    ]
